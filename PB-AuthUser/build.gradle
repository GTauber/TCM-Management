buildscript {
	dependencies {
		classpath "org.flywaydb:flyway-mysql:10.7.1"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.flywaydb.flyway' version '10.7.1'
}

ext {
	springCloudVersion = "2023.0.3"
}

group = 'pb'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
//	Spring WebFlux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

//	Database Related
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'io.asyncer:r2dbc-mysql'

//    Documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.6.0'

//    SpringCloud
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

//	security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

//	docker
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

//	testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
